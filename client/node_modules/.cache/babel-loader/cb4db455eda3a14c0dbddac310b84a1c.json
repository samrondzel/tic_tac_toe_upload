{"ast":null,"code":"var _jsxFileName = \"/home/yagodka/Desktop/tic-tac-toe/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { io } from \"socket.io-client\";\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\nimport JoinGame from \"./components/JoinGame\";\nimport GameField from \"./components/GameField\";\nimport SocketService from \"./services/SocketService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar socket;\n\nfunction App() {\n  _s();\n\n  const setUpListeners = socket => {\n    //Listening for establishing connection with server\n    socket.on(\"connect\", () => {\n      console.log(\"Made connection\");\n    });\n    socket.on(\"connect_error\", err => {\n      console.log(\"Didn't make connection: \" + err);\n    }); //Listening for successfully joining the socket's room\n\n    socket.on(\"join_room_success\", message => {\n      console.log(\"Successfully joined the room \" + message.roomId);\n      setRoomId(message.roomId);\n    }); //Listening for error while joining the socket's room\n\n    socket.on(\"join_room_error\", message => {\n      alert(message.error);\n    });\n  };\n\n  function drawFigure(index) {\n    console.log(\"index: \" + index);\n    const tempGameState = gameState.map((boardCell, i) => {\n      return i === index ? \"X\" : boardCell;\n    });\n    setGameState(tempGameState);\n  }\n\n  let navigate = useNavigate();\n  const [gameId, setGameId] = useState(\"\");\n  const [roomId, setRoomId] = useState(\"\");\n  let arr = new Array(9);\n  arr;\n  const [gameState, setGameState] = useState(new Array(9));\n\n  const connect = () => {\n    socket = io(\"http://localhost:9002\");\n    setUpListeners(socket);\n  }; // const connectSocket = async () => {\n  //   socket = await SocketService.connect(\"http://localhost:9002\").catch((err) => {\n  //     console.log(\"Error: \", err);\n  //   }, []);\n  // }\n\n\n  useEffect(() => {\n    connect(); //---OR---//\n    // SocketService.connect(\"http://localhost:9002\").then((result) => {\n    //   socket = result;\n    // });\n    //---OR---//\n    // connectSocket();\n  }, []);\n\n  const submitForm = e => {\n    e.preventDefault();\n\n    if (gameId !== \"\") {\n      if (socket) {\n        socket.emit(\"join_game\", {\n          \"roomId\": gameId\n        });\n      }\n\n      navigate(\"/game/\" + gameId);\n      setGameId(\"\");\n    } else {\n      alert(\"Enter the id of the room\");\n    }\n  };\n\n  const changeGameId = e => {\n    setGameId(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(JoinGame, {\n          gameId: gameId,\n          functions: {\n            submitForm,\n            changeGameId\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/game/:gameId\",\n        element: /*#__PURE__*/_jsxDEV(GameField, {\n          gameState: gameState,\n          functions: {\n            drawFigure\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(App, \"6kxB4iuD8vXB2jda9RGVSkf9Jc4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/yagodka/Desktop/tic-tac-toe/client/src/App.js"],"names":["React","useEffect","useState","logo","io","Routes","Route","useNavigate","JoinGame","GameField","SocketService","socket","App","setUpListeners","on","console","log","err","message","roomId","setRoomId","alert","error","drawFigure","index","tempGameState","gameState","map","boardCell","i","setGameState","navigate","gameId","setGameId","arr","Array","connect","submitForm","e","preventDefault","emit","changeGameId","target","value"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport {io} from \"socket.io-client\";\nimport {Routes, Route, useNavigate} from \"react-router-dom\";\n\nimport JoinGame from \"./components/JoinGame\";\nimport GameField from \"./components/GameField\";\nimport SocketService from \"./services/SocketService\";\n\nvar socket;\n\nfunction App() {\n\n  const setUpListeners = (socket) => {\n    //Listening for establishing connection with server\n    socket.on(\"connect\", () => {\n      console.log(\"Made connection\");\n    });\n\n    socket.on(\"connect_error\", (err) => {\n      console.log(\"Didn't make connection: \" + err);\n    });\n\n    //Listening for successfully joining the socket's room\n    socket.on(\"join_room_success\", (message) => {\n      console.log(\"Successfully joined the room \" + message.roomId);\n      setRoomId(message.roomId);\n    });\n\n    //Listening for error while joining the socket's room\n    socket.on(\"join_room_error\", (message) => {\n      alert(message.error);\n    });\n  }\n\n  function drawFigure(index){\n    console.log(\"index: \" + index);\n    const tempGameState = gameState.map((boardCell, i) => {\n      return i === index ? \"X\": boardCell;\n    });\n    setGameState(tempGameState);\n  }\n\n  let navigate = useNavigate();\n  const [gameId, setGameId] = useState(\"\");\n  const [roomId, setRoomId] = useState(\"\");\n  let arr = new Array(9);\n  arr\n  const [gameState, setGameState] = useState(new Array(9));\n\n\n  const connect = () => {\n    socket = io(\"http://localhost:9002\");\n    setUpListeners(socket);\n  }\n\n  // const connectSocket = async () => {\n  //   socket = await SocketService.connect(\"http://localhost:9002\").catch((err) => {\n  //     console.log(\"Error: \", err);\n  //   }, []);\n  // }\n\n  useEffect(() => {\n    connect();\n    //---OR---//\n    // SocketService.connect(\"http://localhost:9002\").then((result) => {\n    //   socket = result;\n    // });\n    //---OR---//\n    // connectSocket();\n  }, []);\n\n  const submitForm = (e) => {\n    e.preventDefault();\n    if(gameId !== \"\"){\n      if(socket){\n        socket.emit(\"join_game\", {\"roomId\": gameId});\n      }\n      navigate(\"/game/\" + gameId);\n      setGameId(\"\");\n    }else{\n      alert(\"Enter the id of the room\");\n    }\n  }\n\n  const changeGameId = (e) => {\n    setGameId(e.target.value);\n  }\n\n  return (\n    <>\n      <Routes>\n        <Route path = \"/\" element = {<JoinGame gameId = {gameId} functions = {{submitForm, changeGameId}}/>}/>\n        <Route path = \"/game/:gameId\" element = {<GameField gameState = {gameState} functions = {{drawFigure}}/>}/>\n      </Routes>\n\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}