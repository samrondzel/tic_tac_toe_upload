{"ast":null,"code":"import { io } from \"socket.io-client\"; //class with methods for interacting with the sockets on the server\n\nlet SocketService = Object.create({\n  connect: function (url) {\n    //connects to server and returns socket instance\n    return new Promise((resolve, reject) => {\n      this.socket = io(url);\n\n      if (!this.socket) {\n        reject(new Error(\"socket not created!\"));\n      }\n\n      this.socket.on(\"connect\", () => {\n        console.log(\"Made connection\");\n        resolve(this.socket);\n      });\n      this.socket.on(\"connect_error\", err => {\n        console.log(\"Didn't make connection\");\n        reject(new Error(err));\n      });\n    });\n  }\n});\nexport default SocketService;","map":{"version":3,"sources":["/home/yagodka/Desktop/tic-tac-toe/client/src/services/SocketService.js"],"names":["io","SocketService","Object","create","connect","url","Promise","resolve","reject","socket","Error","on","console","log","err"],"mappings":"AAAA,SAAQA,EAAR,QAAiB,kBAAjB,C,CAEA;;AACA,IAAIC,aAAa,GAAGC,MAAM,CAACC,MAAP,CAAc;AAChCC,EAAAA,OAAO,EAAE,UAASC,GAAT,EAAc;AACrB;AACA,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtC,WAAKC,MAAL,GAAcT,EAAE,CAACK,GAAD,CAAhB;;AAEA,UAAG,CAAC,KAAKI,MAAT,EAAgB;AACdD,QAAAA,MAAM,CAAC,IAAIE,KAAJ,CAAU,qBAAV,CAAD,CAAN;AACD;;AAED,WAAKD,MAAL,CAAYE,EAAZ,CAAe,SAAf,EAA0B,MAAM;AAC9BC,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACAN,QAAAA,OAAO,CAAC,KAAKE,MAAN,CAAP;AACD,OAHD;AAKA,WAAKA,MAAL,CAAYE,EAAZ,CAAe,eAAf,EAAiCG,GAAD,IAAS;AACvCF,QAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACAL,QAAAA,MAAM,CAAC,IAAIE,KAAJ,CAAUI,GAAV,CAAD,CAAN;AACD,OAHD;AAID,KAhBM,CAAP;AAiBD;AApB+B,CAAd,CAApB;AAwBA,eAAeb,aAAf","sourcesContent":["import {io} from \"socket.io-client\";\n\n//class with methods for interacting with the sockets on the server\nlet SocketService = Object.create({\n  connect: function(url) {\n    //connects to server and returns socket instance\n    return new Promise((resolve, reject) => {\n      this.socket = io(url);\n\n      if(!this.socket){\n        reject(new Error(\"socket not created!\"));\n      }\n\n      this.socket.on(\"connect\", () => {\n        console.log(\"Made connection\");\n        resolve(this.socket);\n      });\n\n      this.socket.on(\"connect_error\", (err) => {\n        console.log(\"Didn't make connection\");\n        reject(new Error(err));\n      });\n    });\n  },\n  \n});\n\nexport default SocketService;\n"]},"metadata":{},"sourceType":"module"}