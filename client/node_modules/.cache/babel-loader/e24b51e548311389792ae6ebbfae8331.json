{"ast":null,"code":"var _jsxFileName = \"/home/yagodka/Desktop/tic-tac-toe/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport { io } from \"socket.io-client\";\nimport SocketService from \"./services/SocketService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar socket;\n\nfunction App() {\n  _s();\n\n  const [gameId, setGameId] = useState(\"\");\n\n  const connect = () => {\n    socket = io(\"http://localhost:9002\"); //Listening for establishing connection with server\n\n    socket.on(\"connect\", () => {\n      console.log(\"Made connection\");\n    });\n    socket.on(\"connect_error\", err => {\n      console.log(\"Didn't make connection: \" + err);\n    }); //Listening for successfully joining the socket's room\n\n    socket.on(\"join_room_success\", message => {\n      console.log(\"Successfully joined the room \" + message.roomId);\n    }); //Listening for error while joining the socket's room\n\n    socket.on(\"join_room_error\", message => {\n      console.log(message.error);\n    });\n  };\n\n  const connectSocket = async () => {\n    socket = await SocketService.connect(\"http://localhost:9002\").catch(err => {\n      console.log(\"Error: \", err);\n    });\n  };\n\n  useEffect(() => {\n    // connect();\n    //---OR---//\n    SocketService.connect(\"http://localhost:9002\").then(result => {\n      socket = result;\n    }); //---OR---//\n  }, []);\n\n  const submitForm = e => {\n    e.preventDefault();\n\n    if (socket) {\n      socket.emit(\"join_game\", {\n        \"roomId\": gameId\n      });\n    }\n\n    setGameId(\"\");\n  };\n\n  const changeGameId = e => {\n    setGameId(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Welcome to tic tac toe game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitForm,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Input game id\",\n        value: gameId,\n        onChange: e => changeGameId(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ncACwBY1NKYb4OfbNEmpxPeYnNs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/yagodka/Desktop/tic-tac-toe/client/src/App.js"],"names":["React","useEffect","useState","logo","io","SocketService","socket","App","gameId","setGameId","connect","on","console","log","err","message","roomId","error","connectSocket","catch","then","result","submitForm","e","preventDefault","emit","changeGameId","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,SAAQC,EAAR,QAAiB,kBAAjB;AAEA,OAAOC,aAAP,MAA0B,0BAA1B;;AAEA,IAAIC,MAAJ;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMQ,OAAO,GAAG,MAAM;AACpBJ,IAAAA,MAAM,GAAGF,EAAE,CAAC,uBAAD,CAAX,CADoB,CAGpB;;AACAE,IAAAA,MAAM,CAACK,EAAP,CAAU,SAAV,EAAqB,MAAM;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD,KAFD;AAIAP,IAAAA,MAAM,CAACK,EAAP,CAAU,eAAV,EAA4BG,GAAD,IAAS;AAClCF,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAA6BC,GAAzC;AACD,KAFD,EARoB,CAYpB;;AACAR,IAAAA,MAAM,CAACK,EAAP,CAAU,mBAAV,EAAgCI,OAAD,IAAa;AAC1CH,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAkCE,OAAO,CAACC,MAAtD;AACD,KAFD,EAboB,CAiBpB;;AACAV,IAAAA,MAAM,CAACK,EAAP,CAAU,iBAAV,EAA8BI,OAAD,IAAa;AACxCH,MAAAA,OAAO,CAACC,GAAR,CAAYE,OAAO,CAACE,KAApB;AACD,KAFD;AAGD,GArBD;;AAuBA,QAAMC,aAAa,GAAG,YAAY;AAChCZ,IAAAA,MAAM,GAAG,MAAMD,aAAa,CAACK,OAAd,CAAsB,uBAAtB,EAA+CS,KAA/C,CAAsDL,GAAD,IAAS;AAC3EF,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBC,GAAvB;AACD,KAFc,CAAf;AAGD,GAJD;;AAMAb,EAAAA,SAAS,CAAC,MAAM;AACd;AACA;AACAI,IAAAA,aAAa,CAACK,OAAd,CAAsB,uBAAtB,EAA+CU,IAA/C,CAAqDC,MAAD,IAAY;AAC9Df,MAAAA,MAAM,GAAGe,MAAT;AACD,KAFD,EAHc,CAMd;AACD,GAPQ,EAON,EAPM,CAAT;;AASA,QAAMC,UAAU,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAGlB,MAAH,EAAU;AACRA,MAAAA,MAAM,CAACmB,IAAP,CAAY,WAAZ,EAAyB;AAAC,kBAAUjB;AAAX,OAAzB;AACD;;AACDC,IAAAA,SAAS,CAAC,EAAD,CAAT;AACD,GAND;;AAQA,QAAMiB,YAAY,GAAIH,CAAD,IAAO;AAC1Bd,IAAAA,SAAS,CAACc,CAAC,CAACI,MAAF,CAASC,KAAV,CAAT;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE;AAAM,MAAA,QAAQ,EAAIN,UAAlB;AAAA,8BACE;AAAO,QAAA,IAAI,EAAG,MAAd;AAAqB,QAAA,WAAW,EAAC,eAAjC;AAAiD,QAAA,KAAK,EAAId,MAA1D;AAAkE,QAAA,QAAQ,EAAKe,CAAD,IAAOG,YAAY,CAACH,CAAD;AAAjG;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,IAAI,EAAG,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAhEQhB,G;;KAAAA,G;AAkET,eAAeA,GAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport logo from './logo.svg';\nimport './App.css';\nimport {io} from \"socket.io-client\";\n\nimport SocketService from \"./services/SocketService\";\n\nvar socket;\n\nfunction App() {\n\n  const [gameId, setGameId] = useState(\"\");\n\n  const connect = () => {\n    socket = io(\"http://localhost:9002\");\n\n    //Listening for establishing connection with server\n    socket.on(\"connect\", () => {\n      console.log(\"Made connection\");\n    });\n\n    socket.on(\"connect_error\", (err) => {\n      console.log(\"Didn't make connection: \" + err);\n    });\n\n    //Listening for successfully joining the socket's room\n    socket.on(\"join_room_success\", (message) => {\n      console.log(\"Successfully joined the room \" + message.roomId);\n    });\n\n    //Listening for error while joining the socket's room\n    socket.on(\"join_room_error\", (message) => {\n      console.log(message.error);\n    });\n  }\n\n  const connectSocket = async () => {\n    socket = await SocketService.connect(\"http://localhost:9002\").catch((err) => {\n      console.log(\"Error: \", err);\n    })\n  }\n\n  useEffect(() => {\n    // connect();\n    //---OR---//\n    SocketService.connect(\"http://localhost:9002\").then((result) => {\n      socket = result;\n    });\n    //---OR---//\n  }, []);\n\n  const submitForm = (e) => {\n    e.preventDefault();\n    if(socket){\n      socket.emit(\"join_game\", {\"roomId\": gameId});\n    }\n    setGameId(\"\");\n  }\n\n  const changeGameId = (e) => {\n    setGameId(e.target.value);\n  }\n\n  return (\n    <div className=\"App\">\n      <h4>Welcome to tic tac toe game</h4>\n\n      <form onSubmit = {submitForm}>\n        <input type = \"text\" placeholder=\"Input game id\" value = {gameId} onChange = {(e) => changeGameId(e)}/>\n        <button type = \"submit\">Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}