{"ast":null,"code":"var _jsxFileName = \"/home/yagodka/Desktop/tic-tac-toe/client/src/components/GameField.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function GameField(_ref) {\n  _s();\n\n  let {\n    gameState,\n    isActive,\n    figure,\n    roomId,\n    gameCanStart,\n    functions: {\n      drawFigure,\n      leaveGame\n    }\n  } = _ref;\n  let params = useParams();\n  let gameId = params.gameId;\n  console.log(gameState);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"gameFieldLinks\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        onClick: leaveGame,\n        children: \"Leave game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Welcome from game field: \", gameId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), !gameCanStart && /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Waiting for the second player to join\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), gameCanStart && /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: isActive ? \"Your turn\" : \"Opponent's turn\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"gameBoardContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"gameBoard\",\n        children: gameState.map((boardCell, i) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: isActive && gameCanStart ? () => drawFigure(figure, i) : function () {},\n            children: boardCell !== \"\" ? boardCell : \"\"\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(GameField, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n\n_c = GameField;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameField\");","map":{"version":3,"sources":["/home/yagodka/Desktop/tic-tac-toe/client/src/components/GameField.js"],"names":["React","useState","useParams","Link","GameField","gameState","isActive","figure","roomId","gameCanStart","functions","drawFigure","leaveGame","params","gameId","console","log","map","boardCell","i"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAEA,SAAQC,SAAR,EAAmBC,IAAnB,QAA8B,kBAA9B;;;AAEA,eAAe,SAASC,SAAT,OAA2G;AAAA;;AAAA,MAAxF;AAACC,IAAAA,SAAD;AAAYC,IAAAA,QAAZ;AAAsBC,IAAAA,MAAtB;AAA8BC,IAAAA,MAA9B;AAAsCC,IAAAA,YAAtC;AAAoDC,IAAAA,SAAS,EAAE;AAACC,MAAAA,UAAD;AAAaC,MAAAA;AAAb;AAA/D,GAAwF;AAExH,MAAIC,MAAM,GAAGX,SAAS,EAAtB;AACA,MAAIY,MAAM,GAAGD,MAAM,CAACC,MAApB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYX,SAAZ;AACA,sBACE;AAAA,4BACE;AAAK,MAAA,EAAE,EAAG,gBAAV;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,GAAX;AAAe,QAAA,OAAO,EAAIO,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAA,8CAA8BE,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,EAMI,CAACL,YAAD,iBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ,EAWIA,YAAY,iBACZ;AAAA,gBAAKH,QAAQ,GAAG,WAAH,GAAiB;AAA9B;AAAA;AAAA;AAAA;AAAA,YAZJ,eAgBE;AAAK,MAAA,EAAE,EAAG,oBAAV;AAAA,6BACE;AAAK,QAAA,EAAE,EAAG,WAAV;AAAA,kBACGD,SAAS,CAACY,GAAV,CAAc,CAACC,SAAD,EAAYC,CAAZ,KAAkB;AAC/B,8BAEI;AAAe,YAAA,OAAO,EAAIb,QAAQ,IAAIG,YAAZ,GAA2B,MAAME,UAAU,CAACJ,MAAD,EAASY,CAAT,CAA3C,GAAyD,YAAU,CAAE,CAA/F;AAAA,sBACGD,SAAS,KAAK,EAAd,GAAmBA,SAAnB,GAA+B;AADlC,aAAYC,CAAZ;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAOD,SARA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA,kBADF;AAgCD;;GArCuBf,S;UAETF,S;;;KAFSE,S","sourcesContent":["import React, {useState} from \"react\";\n\nimport {useParams, Link} from \"react-router-dom\";\n\nexport default function GameField({gameState, isActive, figure, roomId, gameCanStart, functions: {drawFigure, leaveGame}}){\n\n  let params = useParams();\n  let gameId = params.gameId;\n  console.log(gameState)\n  return (\n    <>\n      <div id = \"gameFieldLinks\">\n        <Link to = \"/\" onClick = {leaveGame}>Leave game</Link>\n      </div>\n      <h4>Welcome from game field: {gameId}</h4>\n      {\n        !gameCanStart &&\n        <h4>Waiting for the second player to join</h4>\n      }\n\n      {\n        gameCanStart &&\n        <h4>{isActive ? \"Your turn\" : \"Opponent's turn\"}</h4>\n      }\n\n\n      <div id = \"gameBoardContainer\">\n        <div id = \"gameBoard\">\n          {gameState.map((boardCell, i) => {\n            return (\n\n                <div key = {i} onClick = {isActive && gameCanStart ? () => drawFigure(figure, i) : function(){}}>\n                  {boardCell !== \"\" ? boardCell : \"\"}\n                </div>\n\n            )\n          })}\n        </div>\n      </div>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}